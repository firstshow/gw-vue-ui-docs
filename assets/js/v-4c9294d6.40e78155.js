(self.webpackChunkgw_vue_ui=self.webpackChunkgw_vue_ui||[]).push([[812],{7114:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-4c9294d6",path:"/vue-doc/styleGuid.html",title:"风格指南",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"CSS",slug:"css",children:[]},{level:2,title:"文档",slug:"文档",children:[]}],filePathRelative:"vue-doc/styleGuid.md",git:{updatedTime:1625626691e3,contributors:[{name:"WFSHAO",email:"wfshao@shaowenfendeMacBook-Pro.local",commits:2},{name:"邵雯芬",email:"shaowenfang@126.com",commits:1}]}}},2683:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h1 id="风格指南" tabindex="-1"><a class="header-anchor" href="#风格指南" aria-hidden="true">#</a> 风格指南</h1><h2 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> CSS</h2><p>遵循 BEM 的命名：<strong>block-name__element-name--modifier-name</strong><br> 也就是(Block)模块名 + (Element)元素名 + (modifier)修饰器名，元素名用&quot;--&quot;连接，修饰器名用&quot;--&quot;连接。</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n    <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[b([<span class="token punctuation">&#39;</span><span class="token punctuation">&#39;</span>, size, type]),\n      { <span class="token punctuation">&#39;</span>is-disabled<span class="token punctuation">&#39;</span>: disabled || loading },\n      { <span class="token punctuation">&#39;</span>is-round<span class="token punctuation">&#39;</span> : round }\n    ]<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> prefix<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token constant">PREFIX</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../mixins/prefix&#39;</span>\n\n<span class="token comment">// bem helper</span>\n<span class="token comment">// b() // &#39;gw-button&#39;</span>\n<span class="token comment">// b(&#39;text&#39;) // &#39;gw-button__text&#39;</span>\n<span class="token comment">// b({ disabled }) // &#39;gw-button button--disabled&#39;</span>\n<span class="token comment">// b(&#39;text&#39;, { disabled }) // &#39;gw-button__text gw-button__text--disabled&#39;</span>\n<span class="token comment">// b([&#39;disabled&#39;, &#39;primary&#39;]) // &#39;gw-button gw-button--disabled gw-button--primary&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">PREFIX</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-button</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  mixins<span class="token operator">:</span> <span class="token punctuation">[</span>prefix<span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="文档" tabindex="-1"><a class="header-anchor" href="#文档" aria-hidden="true">#</a> 文档</h2><p>组件文档包含</p><ul><li><ul><li>介绍</li><li>引入</li></ul></li><li>代码演示（含基础demo）</li><li>API <ul><li>Props</li><li>Slots</li><li>Event</li></ul></li></ul>',7),p={render:function(n,s){return t}}}}]);